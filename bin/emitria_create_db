#!perl

use strict;
use warnings;

use Emitria;

my $e = Emitria->new();

$e->database()->deploy();

my $perms = $e->resultset('Permission');

my @permissions = qw(
add_user
edit_user
add_show
edit_show
cancel_show
add_file
edit_file
delete_file
add_stream
edit_stream
delete_stream
stop_stream
start_stream
edit_station
add_role
edit_role
);

my $station = $e->resultset('Station')->create({name => 'Emetria'});

my $user = $station->create_related( users => {username => 'admin', password => 'something'});

my $role = $station->create_related(roles => { name => 'admin' });

foreach my $perm_name ( @permissions )
{
    my $perm = $perms->create({name => $perm_name });
    $role->add_to_permissions($perm);
}

$user->add_to_roles($role);

my @contact_types = (
   { name => 'skype', display_name => 'Skype', },
   { name => 'jabber', display_name   => 'Jabber', },
   { name => 'email', display_name => 'E-Mail', required   => 1, },
   { name => 'mobile_phone', display_name => 'Mobile Phone', },
   { name => 'twitter', display_name  => 'Twitter', },
   { name => 'facebook', display_name => 'Facebook', },
);

my $cts = $e->resultset('Contact::Type');

foreach my $ct ( @contact_types )
{
    $cts->create($ct);
}

my @file_types = (
   { name => 'recording', display_name => 'Recorded Live Show', public => 1 },
   { name => 'prerecorded', display_name => 'Pre-Recorded Show',  public => 1},
   { name => 'ident', display_name => 'Station Ident', public => 0 },
   { name => 'bedding', display_name => 'Bedding Music', public => 0 },
);

my $fts = $e->resultset('File::Type');

foreach my $ft ( @file_types )
{
    $fts->create($ft);
}
